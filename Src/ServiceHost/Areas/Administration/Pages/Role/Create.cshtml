@page
@model ServiceHost.Areas.Administration.Pages.Role.CreateModel


<form method="post">
    <div class="header">
        <h4>ایجاد نقش جدید</h4>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label asp-for="Command.Name" class="control-label">عنوان</label>
                <input type="text" class="form-control" asp-for="Command.Name">
                <span asp-validation-for="Command.Name" class="error"></span>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-default waves-effect" asp-page="Index">برگشت</button>
    <button type="submit" class="btn btn-info waves-effect waves-light">ایجاد</button>
</form>

@section Css
{
    <link href="~/AdminTheme/assets/jquery-multi-select/multi-select.css" rel="stylesheet" type="text/css" />
}

@section Scripts
{
    <script type="text/javascript" src="~/AdminTheme/assets/jquery-multi-select/jquery.multi-select.js"></script>
    <script type="text/javascript" src="~/AdminTheme/assets/jquery-multi-select/jquery.quicksearch.js"></script>

    <script>
        jQuery(document).ready(function () {
            $('#my_multi_select3').multiSelect({
                selectableOptgroup: true,
                selectableHeader:
                    "<input type='text' class='form-control search-input' autocomplete='off' placeholder='جستجو ...'>",
                selectionHeader:
                    "<input type='text' class='form-control search-input' autocomplete='off' placeholder='جستجو ...'>",
                afterInit: function (ms) {
                    var that = this,
                        $selectableSearch = that.$selectableUl.prev(),
                        $selectionSearch = that.$selectionUl.prev(),
                        selectableSearchString =
                            '#' + that.$container.attr('id') + ' .ms-elem-selectable:not(.ms-selected)',
                        selectionSearchString = '#' + that.$container.attr('id') + ' .ms-elem-selection.ms-selected';

                    that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
                        .on('keydown',
                            function (e) {
                                if (e.which === 40) {
                                    that.$selectableUl.focus();
                                    return false;
                                }
                            });

                    that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
                        .on('keydown',
                            function (e) {
                                if (e.which == 40) {
                                    that.$selectionUl.focus();
                                    return false;
                                }
                            });
                },
                afterSelect: function () {
                    this.qs1.cache();
                    this.qs2.cache();
                },
                afterDeselect: function () {
                    this.qs1.cache();
                    this.qs2.cache();
                }
            });
        });
    </script>
}